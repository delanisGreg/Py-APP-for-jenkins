pipeline {
	agent {
		label 'master'
		}
	stages {
		stage("Create docker image") {
			steps ('Build') {
				echo "========= start building image ========="
//				app = docker.build("./docker/toolbox")
				dir ('./') {
					sh 'docker build -t gregdelanis/app:3.0 .'
					}
				}
			}
	
		stage('Push image') {
			steps ('PUSHING IN DOCKERHUB'){
				withCredentials([string(credentialsId: 'dockerHubPasswd', variable: 'dockerHubPasswd')]) {
					sh "docker login -u gregdelanis -p ${dockerHubPasswd}"
				}

				sh 'docker push gregdelanis/app:3.0'
			}
		}
		
		stage('stop container'){
			steps ('stopping the container'){
				script {
					dockerStop = "sudo docker kill app4"
					dockerRm = "sudo docker rm app4 -f"
					sshagent(['DockerServer']) {
  						sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${dockerRm}"
                                               }
				}
			}
		}
		stage('update image'){
			steps ('update image'){
				script {
					dockerRmi = "sudo docker rmi gregdelanis/app:3.0"
					sshagent(['DockerServer']) {
  						sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${dockerRmi}"
                                               }
				}
			}
		}
		stage('starting the image'){
			steps('start new image'){
				script {
					dockerRun = "sudo docker run -p 80:5000 -d --name app4 gregdelanis/app:3.0"
					sshagent(['DockerServer']) {	
						sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.22.171 ${dockerRun}"					}
					}	
				}
			}
		}
}

